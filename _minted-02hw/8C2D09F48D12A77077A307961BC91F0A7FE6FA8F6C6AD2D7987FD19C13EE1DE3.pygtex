\begin{Verbatim}[commandchars=\\\{\}]
    \PYG{k+kd}{abstract} \PYG{k+kd}{class} \PYG{n+nc}{Reducer} \PYG{o}{\PYGZob{}}
        \PYG{k+kd}{abstract} \PYG{k+kt}{int} \PYG{n+nf}{f}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{o}{,} \PYG{k+kt}{int} \PYG{n}{y}\PYG{o}{);}

        \PYG{k+kd}{public} \PYG{k+kt}{int} \PYG{n+nf}{reduce}\PYG{o}{(}\PYG{n}{IntList} \PYG{n}{l}\PYG{o}{)} \PYG{o}{\PYGZob{}}
            \PYG{c+c1}{// Renamed for clarity}
            \PYG{n}{IntList} \PYG{n}{node} \PYG{o}{=} \PYG{n}{l}\PYG{o}{;}
            \PYG{c+c1}{// Start the accumulator with the first value.}
            \PYG{c+c1}{// Could be a NullPointerException, but that\PYGZsq{}s}
            \PYG{c+c1}{// the fault of the caller}
            \PYG{k+kt}{int} \PYG{n}{acc} \PYG{o}{=} \PYG{n}{node}\PYG{o}{.}\PYG{n+na}{getValue}\PYG{o}{();}
            \PYG{k}{while} \PYG{o}{(}\PYG{n}{node}\PYG{o}{.}\PYG{n+na}{getNext}\PYG{o}{()} \PYG{o}{!=} \PYG{k+kc}{null}\PYG{o}{)} \PYG{o}{\PYGZob{}}
                \PYG{c+c1}{// Immediately go to next node because}
                \PYG{c+c1}{// otherwise you\PYGZsq{}d repeat the first value}
                \PYG{n}{node} \PYG{o}{=} \PYG{n}{node}\PYG{o}{.}\PYG{n+na}{getNext}\PYG{o}{();}
                \PYG{n}{acc} \PYG{o}{=} \PYG{n}{f}\PYG{o}{(}\PYG{n}{acc}\PYG{o}{,} \PYG{n}{node}\PYG{o}{.}\PYG{n+na}{getValue}\PYG{o}{());}
            \PYG{o}{\PYGZcb{}}
            \PYG{k}{return} \PYG{n}{acc}\PYG{o}{;}
        \PYG{o}{\PYGZcb{}}
    \PYG{o}{\PYGZcb{}}
\end{Verbatim}
